---
import '../styles/header.scss'
import HeaderNav from './ui/HeaderNav.astro'
---

<header>
	<div class="header-container">
		<div class="header-nav">
			<a href="/#hero" class="header-logo">
				<img src="/images/logo.svg" alt="MrLopez Logo" class="header-logo-img" />
			</a>
			<HeaderNav />
			<div class="header-nav-toggle">
				<div class="toggle-open">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						width="36"
						height="36"
						viewBox="0 0 24 24"
						fill="none"
						stroke="currentColor"
						stroke-width="1.3333333333333333"
						stroke-linecap="round"
						stroke-linejoin="round"
						class="lucide lucide-menu"
						><line x1="4" x2="20" y1="12" y2="12"></line><line x1="4" x2="20" y1="6" y2="6"
						></line><line x1="4" x2="20" y1="18" y2="18"></line></svg
					>
				</div>
				<div class="toggle-close">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						width="36"
						height="36"
						viewBox="0 0 24 24"
						fill="none"
						stroke="currentColor"
						stroke-width="1.3333333333333333"
						stroke-linecap="round"
						stroke-linejoin="round"
						class="lucide lucide-x"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
					>
				</div>
			</div>
		</div>
		<div class="header-mobile">
			<HeaderNav />
		</div>
	</div>
</header>

<script>
	import gsap from 'gsap'

	let isOpen = false
	// Mobile menu
	const mobileToggle = document.querySelector('.header-nav-toggle')
	const mobileNavMenu = document.querySelector('.header-container')
	const mobileNavMenuItems = document.querySelectorAll('.header-mobile .header-nav-links li')
	const toggleOpen = document.querySelector('.toggle-open') as Element
	const toggleClose = document.querySelector('.toggle-close') as Element
	const toggleBtn = document.querySelector('.header-nav-toggle') as Element

	const tl = gsap.timeline({ paused: true, reversed: true })

	tl.to(mobileNavMenu, {
		autoAlpha: 1,
		duration: 0.6,
		ease: 'elastic.out(1, 0.6)',
		height: 'auto',
		backgroundColor: 'rgba(0,0,0, 0.6)'
	}).to(toggleOpen,{
        y: 30,
        opacity: 0,
        duration: 0.4,
        ease: 'elastic.out(1, 1)'
    },'-=0.4').to(
			toggleClose, {
			y: 0,
			opacity: 1,
			duration: 0.5,
			ease: 'elastic.out(1, 0.6)'
		},'-=0.4')
    
    .to(
		mobileNavMenuItems,
		{
			scale: 1,
			opacity: 1,
			y: 0,
			duration: 0.5,
			ease: 'power4.out',
			stagger: {
				amount: 0.2
			}
		},
		'-=0.5'
	)

	// toggleTl
	// 	.to(toggleClose, {
	// 		y: 0,
	// 		opacity: 1,
	// 		duration: 0.4,
	// 		ease: 'elastic.out(1, 0.6)'
	// 	})
	// 	.to(
	// 		toggleOpen,
	// 		{
	// 			y: 30,
	// 			opacity: 0,
	// 			duration: 0.4,
	// 			ease: 'elastic.out(1, 1)'
	// 		},
	// 		'-=0.4'
	// 	)

	gsap.set(mobileNavMenu, { autoAlpha: 1, height: '70px' })
	gsap.set(mobileNavMenuItems, { scale: 0.8, opacity: 0, y: -25 })
	gsap.set(toggleOpen, { y: 0, opacity: 1 })
	gsap.set(toggleClose, { y: -30, opacity: 0 })

	const toggleMenu = () => {
		console.log('toggle click')
		tl.reversed() ? tl.play() : tl.reverse() // Toggle animation
	}

	mobileToggle?.addEventListener('click', toggleMenu)

	mobileNavMenuItems?.forEach((anchor) => {
		anchor.addEventListener('click', toggleMenu)
	})

	// Floating nav
	document.addEventListener('scroll', () => {
		const header = document.querySelector('.header-container')

		if (window.scrollY < 250) {
			gsap.to(header, {
				y: 0,
				maxWidth: '1200px',
				left: 0,
				borderRadius: 0,
				padding: '1rem',
				translateX: 0,
				scale: 1,
				border: '1px solid transparent',
				boxShadow: '0px 4px 16px 4px rgba(0, 0, 0, 0)',
				backgroundColor: 'rgba(0,0,0, 0)',
				duration: 0.8,
				ease: 'power4.out'
			}) // Show header
		}
		if (window.scrollY > 250) {
			gsap.to(header, {
				y: '1rem',
				maxWidth: '500px',
				borderRadius: '2rem',
				scale: 0.8,
				border: '1px solid rgba(255, 255, 255, 0.1)',
				boxShadow: '4px 4px 16px 4px rgba(0, 0, 0, 0.4)',
				backgroundColor: 'rgba(0,0,0, 0.6)',
				duration: 1,
				padding: '1rem 1.5rem',
				ease: 'power4.out'
			}) // Hide header
		}
	})

	

		// .to(toggleClose, {
		// 	y: 0,
		// 	opacity: 1,
		// 	duration: 0.4,
		// 	ease: 'elastic.out(1, 0.6)'
		// })
		// .to(
		// 	toggleOpen,
		// 	{
		// 		y: 30,
		// 		opacity: 0,
		// 		duration: 0.4,
		// 		ease: 'elastic.out(1, 1)'
		// 	},
		// 	'-=0.4'
		// )


</script>
